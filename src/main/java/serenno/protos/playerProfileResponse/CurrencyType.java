// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: PlayerProfileResponse.proto

package serenno.protos.playerProfileResponse;

/**
 * Protobuf enum {@code serenno.protos.playerProfileResponse.CurrencyType}
 */
public enum CurrencyType
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <code>CURRENCY_TYPE_NONE = 0;</code>
   */
  CURRENCY_TYPE_NONE(0),
  /**
   * <code>GRIND = 1;</code>
   */
  GRIND(1),
  /**
   * <code>PREMIUM = 2;</code>
   */
  PREMIUM(2),
  /**
   * <code>REAL_MONEY = 3;</code>
   */
  REAL_MONEY(3),
  /**
   * <code>SOCIAL = 4;</code>
   */
  SOCIAL(4),
  /**
   * <code>IGC_EVENT_KEYCARD = 8;</code>
   */
  IGC_EVENT_KEYCARD(8),
  /**
   * <code>XP_EVENT_KEYCARD = 9;</code>
   */
  XP_EVENT_KEYCARD(9),
  /**
   * <code>PVP_CURRENCY = 10;</code>
   */
  PVP_CURRENCY(10),
  /**
   * <code>FORCE_POINT = 11;</code>
   */
  FORCE_POINT(11),
  /**
   * <code>PVP_SHIP_CURRENCY = 12;</code>
   */
  PVP_SHIP_CURRENCY(12),
  /**
   * <code>FREE = 13;</code>
   */
  FREE(13),
  /**
   * <code>WAR_SHIP_CURRENCY = 14;</code>
   */
  WAR_SHIP_CURRENCY(14),
  /**
   * <code>GRIND_TICKET = 15;</code>
   */
  GRIND_TICKET(15),
  /**
   * <code>SHARD_CURRENCY = 16;</code>
   */
  SHARD_CURRENCY(16),
  /**
   * <code>GUILD_CURRENCY = 17;</code>
   */
  GUILD_CURRENCY(17),
  /**
   * <code>GUILD_BANK_CURRENCY = 18;</code>
   */
  GUILD_BANK_CURRENCY(18),
  /**
   * <code>SHIP_GRIND = 19;</code>
   */
  SHIP_GRIND(19),
  /**
   * <code>GUILD_RAID_CURRENCY_01 = 20;</code>
   */
  GUILD_RAID_CURRENCY_01(20),
  /**
   * <code>GUILD_RAID_CURRENCY_02 = 21;</code>
   */
  GUILD_RAID_CURRENCY_02(21),
  /**
   * <code>GUILD_RAID_CURRENCY_03 = 22;</code>
   */
  GUILD_RAID_CURRENCY_03(22),
  /**
   * <code>GUILD_RAID_CURRENCY_04 = 23;</code>
   */
  GUILD_RAID_CURRENCY_04(23),
  /**
   * <code>GUILD_RAID_CURRENCY_05 = 24;</code>
   */
  GUILD_RAID_CURRENCY_05(24),
  /**
   * <code>GUILD_RAID_CURRENCY_06 = 25;</code>
   */
  GUILD_RAID_CURRENCY_06(25),
  /**
   * <code>GUILD_RAID_CURRENCY_07 = 26;</code>
   */
  GUILD_RAID_CURRENCY_07(26),
  /**
   * <code>GUILD_RAID_CURRENCY_08 = 27;</code>
   */
  GUILD_RAID_CURRENCY_08(27),
  /**
   * <code>GUILD_RAID_CURRENCY_09 = 28;</code>
   */
  GUILD_RAID_CURRENCY_09(28),
  /**
   * <code>GUILD_RAID_CURRENCY_10 = 29;</code>
   */
  GUILD_RAID_CURRENCY_10(29),
  /**
   * <code>GUILD_RAID_CURRENCY_11 = 30;</code>
   */
  GUILD_RAID_CURRENCY_11(30),
  /**
   * <code>GUILD_RAID_CURRENCY_12 = 31;</code>
   */
  GUILD_RAID_CURRENCY_12(31),
  UNRECOGNIZED(-1),
  ;

  /**
   * <code>CURRENCY_TYPE_NONE = 0;</code>
   */
  public static final int CURRENCY_TYPE_NONE_VALUE = 0;
  /**
   * <code>GRIND = 1;</code>
   */
  public static final int GRIND_VALUE = 1;
  /**
   * <code>PREMIUM = 2;</code>
   */
  public static final int PREMIUM_VALUE = 2;
  /**
   * <code>REAL_MONEY = 3;</code>
   */
  public static final int REAL_MONEY_VALUE = 3;
  /**
   * <code>SOCIAL = 4;</code>
   */
  public static final int SOCIAL_VALUE = 4;
  /**
   * <code>IGC_EVENT_KEYCARD = 8;</code>
   */
  public static final int IGC_EVENT_KEYCARD_VALUE = 8;
  /**
   * <code>XP_EVENT_KEYCARD = 9;</code>
   */
  public static final int XP_EVENT_KEYCARD_VALUE = 9;
  /**
   * <code>PVP_CURRENCY = 10;</code>
   */
  public static final int PVP_CURRENCY_VALUE = 10;
  /**
   * <code>FORCE_POINT = 11;</code>
   */
  public static final int FORCE_POINT_VALUE = 11;
  /**
   * <code>PVP_SHIP_CURRENCY = 12;</code>
   */
  public static final int PVP_SHIP_CURRENCY_VALUE = 12;
  /**
   * <code>FREE = 13;</code>
   */
  public static final int FREE_VALUE = 13;
  /**
   * <code>WAR_SHIP_CURRENCY = 14;</code>
   */
  public static final int WAR_SHIP_CURRENCY_VALUE = 14;
  /**
   * <code>GRIND_TICKET = 15;</code>
   */
  public static final int GRIND_TICKET_VALUE = 15;
  /**
   * <code>SHARD_CURRENCY = 16;</code>
   */
  public static final int SHARD_CURRENCY_VALUE = 16;
  /**
   * <code>GUILD_CURRENCY = 17;</code>
   */
  public static final int GUILD_CURRENCY_VALUE = 17;
  /**
   * <code>GUILD_BANK_CURRENCY = 18;</code>
   */
  public static final int GUILD_BANK_CURRENCY_VALUE = 18;
  /**
   * <code>SHIP_GRIND = 19;</code>
   */
  public static final int SHIP_GRIND_VALUE = 19;
  /**
   * <code>GUILD_RAID_CURRENCY_01 = 20;</code>
   */
  public static final int GUILD_RAID_CURRENCY_01_VALUE = 20;
  /**
   * <code>GUILD_RAID_CURRENCY_02 = 21;</code>
   */
  public static final int GUILD_RAID_CURRENCY_02_VALUE = 21;
  /**
   * <code>GUILD_RAID_CURRENCY_03 = 22;</code>
   */
  public static final int GUILD_RAID_CURRENCY_03_VALUE = 22;
  /**
   * <code>GUILD_RAID_CURRENCY_04 = 23;</code>
   */
  public static final int GUILD_RAID_CURRENCY_04_VALUE = 23;
  /**
   * <code>GUILD_RAID_CURRENCY_05 = 24;</code>
   */
  public static final int GUILD_RAID_CURRENCY_05_VALUE = 24;
  /**
   * <code>GUILD_RAID_CURRENCY_06 = 25;</code>
   */
  public static final int GUILD_RAID_CURRENCY_06_VALUE = 25;
  /**
   * <code>GUILD_RAID_CURRENCY_07 = 26;</code>
   */
  public static final int GUILD_RAID_CURRENCY_07_VALUE = 26;
  /**
   * <code>GUILD_RAID_CURRENCY_08 = 27;</code>
   */
  public static final int GUILD_RAID_CURRENCY_08_VALUE = 27;
  /**
   * <code>GUILD_RAID_CURRENCY_09 = 28;</code>
   */
  public static final int GUILD_RAID_CURRENCY_09_VALUE = 28;
  /**
   * <code>GUILD_RAID_CURRENCY_10 = 29;</code>
   */
  public static final int GUILD_RAID_CURRENCY_10_VALUE = 29;
  /**
   * <code>GUILD_RAID_CURRENCY_11 = 30;</code>
   */
  public static final int GUILD_RAID_CURRENCY_11_VALUE = 30;
  /**
   * <code>GUILD_RAID_CURRENCY_12 = 31;</code>
   */
  public static final int GUILD_RAID_CURRENCY_12_VALUE = 31;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @Deprecated
  public static CurrencyType valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static CurrencyType forNumber(int value) {
    switch (value) {
      case 0: return CURRENCY_TYPE_NONE;
      case 1: return GRIND;
      case 2: return PREMIUM;
      case 3: return REAL_MONEY;
      case 4: return SOCIAL;
      case 8: return IGC_EVENT_KEYCARD;
      case 9: return XP_EVENT_KEYCARD;
      case 10: return PVP_CURRENCY;
      case 11: return FORCE_POINT;
      case 12: return PVP_SHIP_CURRENCY;
      case 13: return FREE;
      case 14: return WAR_SHIP_CURRENCY;
      case 15: return GRIND_TICKET;
      case 16: return SHARD_CURRENCY;
      case 17: return GUILD_CURRENCY;
      case 18: return GUILD_BANK_CURRENCY;
      case 19: return SHIP_GRIND;
      case 20: return GUILD_RAID_CURRENCY_01;
      case 21: return GUILD_RAID_CURRENCY_02;
      case 22: return GUILD_RAID_CURRENCY_03;
      case 23: return GUILD_RAID_CURRENCY_04;
      case 24: return GUILD_RAID_CURRENCY_05;
      case 25: return GUILD_RAID_CURRENCY_06;
      case 26: return GUILD_RAID_CURRENCY_07;
      case 27: return GUILD_RAID_CURRENCY_08;
      case 28: return GUILD_RAID_CURRENCY_09;
      case 29: return GUILD_RAID_CURRENCY_10;
      case 30: return GUILD_RAID_CURRENCY_11;
      case 31: return GUILD_RAID_CURRENCY_12;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<CurrencyType>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      CurrencyType> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<CurrencyType>() {
          public CurrencyType findValueByNumber(int number) {
            return CurrencyType.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    if (this == UNRECOGNIZED) {
      throw new IllegalStateException(
          "Can't get the descriptor of an unrecognized enum value.");
    }
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return PlayerProfileResponseOuterClass.getDescriptor().getEnumTypes().get(0);
  }

  private static final CurrencyType[] VALUES = values();

  public static CurrencyType valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private CurrencyType(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:serenno.protos.playerProfileResponse.CurrencyType)
}

